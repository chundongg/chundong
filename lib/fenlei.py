from collections import defaultdict

def fenlei(query:str) -> bool:
    text = [('别扔啥也不是的瓶子啊', 0), ('内容', 1), ('内容', 1), ('捡到这个瓶子的人拉s没带纸', 0), ('内容', 1), ('我是小呆子笨笨', 0), ('你好', 0), ('399434428@qq.com', 0), ('内容', 1), ('内容', 1), ('测试测试', 1), ('〈告诉你个小秘密：你快s了，活不了多久了[Face:9]〉', 0), ('奥利给', 0), ('阿巴巴巴', 0), ('我想要个色色的女朋友', 0), ('内容', 1), ('内容', 1), ('内容', 1), ('富婆', 0), ('内容', 1), ('内容', 1), ('内容', 1), ('淦', 0), ('加个扣扣？', 0), ('你好', 0), ('你好', 0), ('内容', 1), ('哈哈哈哈嗝', 0), ('内容', 1), ('你好，我是驴肉饼', 0), ('你好', 0), ('您好', 0), ('内容', 1), ('我能捡到自己丢的吗', 0), ('内容', 1), ('大架号', 0), ('睡觉喽', 0), ('你好', 0), ('内容', 1), ('安徽', 1), ('大家好，我是海析 Pro的作者《海东青》，感谢各位用户的使用，喜欢打游戏的可以加群交流 。', 0), ('内容', 1), ('淦，来找我', 0), ('🌝🌝🌚🌚🌝🌝🌚🌚🌝🌝', 0), ('我是小呆子笨笨', 0), ('6', 1), ('我能捡到自己丢的吗', 0), ('富婆', 0), ('6', 1), ('内容', 1), ('🐶', 0), ('能不能不要扔一些乱七八糟的', 0), ('南通加我', 0), ('println',1), ('你好', 0), ('测试一下', 1), ('你好，我是驴肉饼', 0), ('加我', 0), ('能不能不要扔一些乱七八糟的', 0), ('你好', 0), ('内容', 1), ('🐶', 0), ('内容', 1), ('你好，这里是a', 0), ('我是通通', 0), ('看看', 1), ('爱你', 0), ('兄弟们好', 0), ('安徽', 1), ('你真跟我有缘，加个QQ吗？我QQ：2473316974', 0), ('内容', 1), ('你好', 0), ('来个富婆', 0), ('你好陌生人', 0), ('hello!', 0), ('hi', 0), ('[@3474006766]', 0), ('你好', 0), ('内容', 1), ('你是猪', 0), ('不能', 1), ('你好，这里是联a', 0), ('2022.1.1701:53', 0), ('内容', 1), ('你是一个', 0), ('你真跟我有缘，加个QQ吗？我QQ：2473316974', 0), ('阿巴阿巴', 0), ('老婆加我2073355171', 0), ('安徽', 0), ('你是一个', 0), ('399434455', 0), ('都来玩命运2', 0), ('内容', 1), ('卧槽无情', 0), ('内容', 1), ('你好', 0)]

    tt , ys =[t for t, y in text], [y for t, y in text]

    counts = defaultdict(int)
    yi_num = defaultdict(int)
    for line, yi in zip(tt, ys):
        yi_num[yi] += 1
        for c in set(line):
            counts[(c, yi)] += 1

    probs = defaultdict(lambda : 1/len(set(''.join(tt))))

    for c_y, t in counts.items():
        c, y = c_y
        probs[(c, y)] = counts[c_y] / yi_num[y]

    hypothesis = {i: (yi_num[i] / len(ys)) for i in yi_num}

    pred = {}
    for yi in hypothesis:
        prod = 1
        for c in set(query):
            prod *= probs[(c, yi)]

        pred[yi] = prod * hypothesis[yi]
    
    if pred[0] >= pred[1]:
        return True
    else:
        return False
